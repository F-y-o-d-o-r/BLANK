/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-android-chrome-192x192 {
  background-image: url(sprite.png);
  background-position: 0px -384px;
  width: 192px;
  height: 192px;
}
.icon-android-chrome-384x384 {
  background-image: url(sprite.png);
  background-position: 0px 0px;
  width: 384px;
  height: 384px;
}
.icon-apple-touch-icon {
  background-image: url(sprite.png);
  background-position: -192px -384px;
  width: 180px;
  height: 180px;
}
.icon-favicon-16x16 {
  background-image: url(sprite.png);
  background-position: -416px -270px;
  width: 16px;
  height: 16px;
}
.icon-favicon-32x32 {
  background-image: url(sprite.png);
  background-position: -384px -270px;
  width: 32px;
  height: 32px;
}
.icon-mstile-150x150 {
  background-image: url(sprite.png);
  background-position: -384px 0px;
  width: 270px;
  height: 270px;
}
