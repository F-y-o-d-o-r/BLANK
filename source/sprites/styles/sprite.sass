// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$android-chrome-192x192-name: 'android-chrome-192x192'
$android-chrome-192x192-x: 0px
$android-chrome-192x192-y: 384px
$android-chrome-192x192-offset-x: 0px
$android-chrome-192x192-offset-y: -384px
$android-chrome-192x192-width: 192px
$android-chrome-192x192-height: 192px
$android-chrome-192x192-total-width: 654px
$android-chrome-192x192-total-height: 576px
$android-chrome-192x192-image: 'sprite.png'
$android-chrome-192x192: (0px, 384px, 0px, -384px, 192px, 192px, 654px, 576px, 'sprite.png', 'android-chrome-192x192', )
$android-chrome-384x384-name: 'android-chrome-384x384'
$android-chrome-384x384-x: 0px
$android-chrome-384x384-y: 0px
$android-chrome-384x384-offset-x: 0px
$android-chrome-384x384-offset-y: 0px
$android-chrome-384x384-width: 384px
$android-chrome-384x384-height: 384px
$android-chrome-384x384-total-width: 654px
$android-chrome-384x384-total-height: 576px
$android-chrome-384x384-image: 'sprite.png'
$android-chrome-384x384: (0px, 0px, 0px, 0px, 384px, 384px, 654px, 576px, 'sprite.png', 'android-chrome-384x384', )
$apple-touch-icon-name: 'apple-touch-icon'
$apple-touch-icon-x: 192px
$apple-touch-icon-y: 384px
$apple-touch-icon-offset-x: -192px
$apple-touch-icon-offset-y: -384px
$apple-touch-icon-width: 180px
$apple-touch-icon-height: 180px
$apple-touch-icon-total-width: 654px
$apple-touch-icon-total-height: 576px
$apple-touch-icon-image: 'sprite.png'
$apple-touch-icon: (192px, 384px, -192px, -384px, 180px, 180px, 654px, 576px, 'sprite.png', 'apple-touch-icon', )
$favicon-16x16-name: 'favicon-16x16'
$favicon-16x16-x: 416px
$favicon-16x16-y: 270px
$favicon-16x16-offset-x: -416px
$favicon-16x16-offset-y: -270px
$favicon-16x16-width: 16px
$favicon-16x16-height: 16px
$favicon-16x16-total-width: 654px
$favicon-16x16-total-height: 576px
$favicon-16x16-image: 'sprite.png'
$favicon-16x16: (416px, 270px, -416px, -270px, 16px, 16px, 654px, 576px, 'sprite.png', 'favicon-16x16', )
$favicon-32x32-name: 'favicon-32x32'
$favicon-32x32-x: 384px
$favicon-32x32-y: 270px
$favicon-32x32-offset-x: -384px
$favicon-32x32-offset-y: -270px
$favicon-32x32-width: 32px
$favicon-32x32-height: 32px
$favicon-32x32-total-width: 654px
$favicon-32x32-total-height: 576px
$favicon-32x32-image: 'sprite.png'
$favicon-32x32: (384px, 270px, -384px, -270px, 32px, 32px, 654px, 576px, 'sprite.png', 'favicon-32x32', )
$mstile-150x150-name: 'mstile-150x150'
$mstile-150x150-x: 384px
$mstile-150x150-y: 0px
$mstile-150x150-offset-x: -384px
$mstile-150x150-offset-y: 0px
$mstile-150x150-width: 270px
$mstile-150x150-height: 270px
$mstile-150x150-total-width: 654px
$mstile-150x150-total-height: 576px
$mstile-150x150-image: 'sprite.png'
$mstile-150x150: (384px, 0px, -384px, 0px, 270px, 270px, 654px, 576px, 'sprite.png', 'mstile-150x150', )
$spritesheet-width: 654px
$spritesheet-height: 576px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($android-chrome-192x192, $android-chrome-384x384, $apple-touch-icon, $favicon-16x16, $favicon-32x32, $mstile-150x150, )
$spritesheet: (654px, 576px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
